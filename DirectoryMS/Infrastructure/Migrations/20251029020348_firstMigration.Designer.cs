// <auto-generated />
using System;
using Infraestructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251029020348_firstMigration")]
    partial class firstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Doctor", b =>
                {
                    b.Property<long>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DoctorId"));

                    b.Property<string>("Biography")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("DoctorId");

                    b.ToTable("Doctor", (string)null);

                    b.HasData(
                        new
                        {
                            DoctorId = 1L,
                            Biography = "Especialista en medicina general con 10 años de experiencia.",
                            FirstName = "Juan",
                            LastName = "Pérez",
                            LicenseNumber = "ABC123",
                            UserId = 2L
                        },
                        new
                        {
                            DoctorId = 2L,
                            Biography = "Cardióloga dedicada a la salud del corazón.",
                            FirstName = "María",
                            LastName = "Gómez",
                            LicenseNumber = "DEF456",
                            UserId = 3L
                        },
                        new
                        {
                            DoctorId = 3L,
                            Biography = "Pediatra apasionado por el cuidado infantil.",
                            FirstName = "Carlos",
                            LastName = "López",
                            LicenseNumber = "GHI789",
                            UserId = 4L
                        },
                        new
                        {
                            DoctorId = 4L,
                            Biography = "Dermatóloga especializada en tratamientos de la piel.",
                            FirstName = "Ana",
                            LastName = "Martínez",
                            LicenseNumber = "JKL012",
                            UserId = 5L
                        });
                });

            modelBuilder.Entity("Domain.Entities.Patient", b =>
                {
                    b.Property<long>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PatientId"));

                    b.Property<string>("Adress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<string>("HealthPlan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MembershipNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("PatientId");

                    b.ToTable("Patient", (string)null);

                    b.HasData(
                        new
                        {
                            PatientId = 1L,
                            Adress = "Calle Falsa 123",
                            DateOfBirth = new DateOnly(1985, 5, 20),
                            Dni = 12345678,
                            HealthPlan = "Plan A",
                            LastName = "Fernandez",
                            MembershipNumber = "PA123456",
                            Name = "Luis",
                            UserId = 6L
                        },
                        new
                        {
                            PatientId = 2L,
                            Adress = "Avenida Siempre Viva 742",
                            DateOfBirth = new DateOnly(1990, 8, 15),
                            Dni = 87654321,
                            HealthPlan = "Plan B",
                            LastName = "Ramirez",
                            MembershipNumber = "PB654321",
                            Name = "Sofia",
                            UserId = 7L
                        },
                        new
                        {
                            PatientId = 3L,
                            Adress = "Boulevard Central 456",
                            DateOfBirth = new DateOnly(1978, 12, 5),
                            Dni = 11223344,
                            HealthPlan = "Plan C",
                            LastName = "Gonzalez",
                            MembershipNumber = "PC112233",
                            Name = "Mateo",
                            UserId = 8L
                        },
                        new
                        {
                            PatientId = 4L,
                            Adress = "Calle del Sol 789",
                            DateOfBirth = new DateOnly(2000, 3, 30),
                            Dni = 44332211,
                            HealthPlan = "Plan A",
                            LastName = "Vega",
                            MembershipNumber = "PA445566",
                            Name = "Isabella",
                            UserId = 9L
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
